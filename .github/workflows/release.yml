name: Build and Release

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine build requests
    
    - name: Extract version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
    
    - name: Build binaries for all platforms
      run: python build_binary.py --all
    
    - name: Verify binaries
      run: |
        ls -la releases/
        find releases -type f -name "pathik_bin*" | sort
    
    - name: Create GitHub Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        name: Pathik ${{ env.VERSION }}
        draft: false
        prerelease: false
        files: |
          releases/darwin_amd64/pathik_bin
          releases/darwin_arm64/pathik_bin
          releases/linux_amd64/pathik_bin
          releases/linux_arm64/pathik_bin
          releases/windows_amd64/pathik_bin.exe
    
    - name: Build Python package
      run: |
        # Ensure version numbers match
        sed -i "s/VERSION = '.*'/VERSION = '${{ env.VERSION }}'/g" setup.py
        sed -i "s/__version__ = \".*\"/__version__ = \"${{ env.VERSION }}\"/g" pathik/__init__.py
        
        # Build the package
        python -m build
    
    - name: Upload to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload dist/* 